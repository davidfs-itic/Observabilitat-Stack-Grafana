version: '3.8'

services:
  # Grafana - La plataforma de visualització
  grafana:
    image: grafana/grafana:12.0.1
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      # Configuració opcional: pots canviar el password de l'admin inicial
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=1357924680
      # Si no els configures, l'usuari/password per defecte serà admin/admin
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel
    restart: unless-stopped
    networks:
      - monitoring_network
    depends_on:
      - loki
      - mimir
      - tempo
      - prometheus

 # Prometheus - Recol·lector i emmagatzematge de mètriques
  prometheus:
    image: prom/prometheus:v2.55.1
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-remote-write-receiver'
      - '--storage.tsdb.retention.time=15d'
      - '--storage.tsdb.retention.size=10GB'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    networks:
      - monitoring_network
  # Loki - Sistema d'agregació de logs
  loki:
    image: grafana/loki:3.4.1
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/config.yaml:ro
      - loki_data:/loki
    restart: unless-stopped
    networks:
      - monitoring_network
  promtail:
    image: grafana/promtail:3.4.1
    container_name: promtail    
    volumes:
      - ./loki/promtail-config.yaml:/etc/promtail/config.yaml:ro
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - monitoring_network
  # Grafana Alloy - Per enviar logs, mètriques i traces (successor de Grafana Agent)
  alloy:
    image: grafana/alloy:v1.9.1
    container_name: alloy
    ports:
      - "12345:12345" # Port per a l'API d'Alloy
      - "4317:4317"   # OpenTelemetry gRPC
      - "4318:4318"   # OpenTelemetry HTTP
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    volumes:
      - ./alloy/config.alloy:/etc/alloy/config.alloy:ro
      - alloy_data:/var/lib/alloy/data
      - /var/log:/var/log:ro # Per recollir logs del host
      - /var/lib/docker/containers:/var/lib/docker/containers:ro # Per logs de Docker
      - /var/run/docker.sock:/var/run/docker.sock:ro # AFEGIT: Accés al Docker daemon
    restart: unless-stopped
    networks:
      - monitoring_network
    depends_on:
      - loki
      - mimir
      - tempo

  # Mimir - Base de dades de sèries temporals escalable per a mètriques
  mimir:
    image: grafana/mimir:2.16.0
    container_name: mimir
    ports:
      - "9009:9009"
    command: -config.file=/etc/mimir/mimir.yaml
    volumes:
      - ./mimir/mimir.yaml:/etc/mimir/mimir.yaml:ro
      - mimir_data:/data
    restart: unless-stopped
    networks:
      - monitoring_network

  # Tempo - Sistema d'agregació de traces
  tempo:
    image: grafana/tempo:2.8.0
    container_name: tempo
    ports:
      - "3200:3200"   # HTTP API
      - "14268:14268" # Jaeger gRPC (opcional)
      - "9411:9411"   # Zipkin (opcional)
    command: -config.file=/etc/tempo/config.yaml
    volumes:
      - ./tempo/config.yaml:/etc/tempo/config.yaml:ro
      - tempo_data:/tmp/tempo
    restart: unless-stopped
    networks:
      - monitoring_network

networks:
  monitoring_network:
    name: xarxa_docker1
    external: true

volumes:
  grafana_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/docker/grafana/grafana_data'
  loki_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/docker/grafana/loki_data'
  mimir_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/docker/grafana/mimir_data'
  tempo_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/docker/grafana/tempo_data'
  alloy_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/docker/grafana/alloy_data'
  # Per a Prometheus, utilitzem un volum per emmagatzemar les dades
  prometheus_data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/docker/grafana/prometheus_data'      