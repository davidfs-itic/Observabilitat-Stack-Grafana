// Configuració d'Alloy per recollir mètriques i logs

// Descobriment de contenidors Docker
//discovery.docker "containers" {
//  host = "unix:///var/run/docker.sock"
//}

// Recollir mètriques dels contenidors Docker i enviar-les a Prometheus
//prometheus.scrape "docker_containers" {
//  targets = discovery.docker.containers.targets
//  forward_to = [prometheus.remote_write.prometheus.receiver]
//  scrape_interval = "15s"
//}

// Exposar mètriques pròpies d'Alloy per a que Prometheus les reculli
//prometheus.exporter.self "alloy_metrics" {
//}

//prometheus.scrape "alloy_self" {
//  targets = prometheus.exporter.self.alloy_metrics.targets
//  forward_to = [prometheus.remote_write.prometheus.receiver]
//  scrape_interval = "15s"
//}

// Enviar mètriques a Mimir via remote_write
//prometheus.remote_write "mimir" {
//  endpoint {
//    url = "http://mimir:9009/api/v1/push"
//  }
//}
// Enviar mètriques a Prometheus via remote_write
prometheus.remote_write "prometheus" {
  endpoint {
    url = "http://prometheus:9090/api/v1/write"
  }
}

// Recollir logs dels fitxers del sistema
loki.source.file "system_logs" {
  targets = [
    {__path__ = "/var/log/syslog", job = "syslog"},
    {__path__ = "/var/log/auth.log", job = "auth"},
  ]
  forward_to = [loki.write.loki.receiver]
}

// Recollir logs dels contenidors Docker
//loki.source.docker "docker_logs" {
//  host = "unix:///var/run/docker.sock"
//  targets = discovery.docker.containers.targets
//  forward_to = [loki.write.loki.receiver]
//  labels = {
//    job = "docker",
//  }
//}

// Enviar logs a Loki
loki.write "loki" {
  endpoint {
    url = "http://loki:3100/loki/api/v1/push"
  }
}

// Receptor OpenTelemetry per traces
otelcol.receiver.otlp "traces" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }
  output {
    traces = [otelcol.exporter.otlp.tempo.input]
  }
}

// Exportar traces a Tempo
otelcol.exporter.otlp "tempo" {
  client {
    endpoint = "http://tempo:4317"
    tls {
      insecure = true
    }
  }
}