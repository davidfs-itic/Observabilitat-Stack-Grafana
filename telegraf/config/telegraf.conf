# /opt/docker/telegraf/config/telegraf.conf

[global_tags]
  # Pots afegir tags globals a totes les mètriques, per exemple, el nom del host
  host = "$HOSTNAME" # Telegraf agafarà el hostname del contenidor, que pot ser útil
  # Alternativament, si vols el nom del host real, pots fer-ho així (requereix env var)
  # host = "${HOST_REAL_HOSTNAME}" 

[agent]
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "" ## Si deixes buit, utilitza el hostname del contenidor.
                  ## Pots posar-hi "${HOST_REAL_HOSTNAME}" si passes la variable d'entorn.
  omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"] # Adreça d'InfluxDB a la mateixa xarxa de Docker Compose
  token = "dshdifuhb9733011237ewfdifnfldksaodhwieugfas" # IMPORTANT: Usa el mateix token que vas definir per a InfluxDB
  organization = "Itic"
  #bucket = "bucket1"
  ## Descomenta la línia següent per enviar totes les mètriques a un bucket específic de Telegraf
  bucket = "telegraf" 
  timeout = "5s"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Mètriques de CPU del host
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false
  ## IMPORTANT: Per a monitoritzar el host des d'un contenidor,
  ## calen aquestes variables d'entorn al contenidor de Telegraf
  ## HOST_PROC=/hostfs/proc i HOST_SYS=/hostfs/sys
  
# Mètriques de memòria del host
[[inputs.mem]]
  ## HOST_PROC=/hostfs/proc

# Mètriques de la càrrega del sistema
[[inputs.system]]
  ## HOST_PROC=/hostfs/proc
  ## HOST_SYS=/hostfs/sys

# Mètriques d'ús del disc del host
[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]
  mount_points = ["/hostfs"] # Telegraf buscarà els punts de muntatge a /hostfs dins del contenidor
  ## HOST_PROC=/hostfs/proc
  ## HOST_SYS=/hostfs/sys

# Mètriques d'I/O del disc del host
[[inputs.diskio]]
  ## HOST_PROC=/hostfs/proc
  ## HOST_SYS=/hostfs/sys

# Mètriques de xarxa del host
[[inputs.net]]
  interfaces = ["eth0", "lo"] # O les interfícies que vulguis monitoritzar
  ## HOST_PROC=/hostfs/proc
  ## HOST_SYS=/hostfs/sys

# Mètriques del procés de Docker (si vols monitoritzar el propi daemon de Docker)
# Necessita accés al socket de Docker
# Read metrics about docker containers
[[inputs.docker]]
  ## Docker Endpoint
  ##   To use TCP, set endpoint = "tcp://[ip]:[port]"
  ##   To use environment variables (ie, docker-machine), set endpoint = "ENV"
  endpoint = "unix:///var/run/docker.sock"

  ## Set to true to collect Swarm metrics(desired_replicas, running_replicas)
  ## Note: configure this in one of the manager nodes in a Swarm cluster.
  ## configuring in multiple Swarm managers results in duplication of metrics.
  gather_services = false

  ## Only collect metrics for these containers. Values will be appended to
  ## container_name_include.
  ## Deprecated (1.4.0), use container_name_include
  container_names = []

  ## Set the source tag for the metrics to the container ID hostname, eg first 12 chars
  source_tag = false

  ## Containers to include and exclude. Collect all if empty. Globs accepted.
  container_name_include = []
  container_name_exclude = []

  ## Container states to include and exclude. Globs accepted.
  ## When empty only containers in the "running" state will be captured.
  ## example: container_state_include = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
  ## example: container_state_exclude = ["created", "restarting", "running", "removing", "paused", "exited", "dead"]
  # container_state_include = []
  # container_state_exclude = []

  ## Objects to include for disk usage query
  ## Allowed values are "container", "image", "volume" 
  ## When empty disk usage is excluded
  storage_objects = []

  ## Timeout for docker list, info, and stats commands
  timeout = "5s"

  ## Specifies for which classes a per-device metric should be issued
  ## Possible values are 'cpu' (cpu0, cpu1, ...), 'blkio' (8:0, 8:1, ...) and 'network' (eth0, eth1, ...)
  ## Please note that this setting has no effect if 'perdevice' is set to 'true'
  # perdevice_include = ["cpu"]

  ## Specifies for which classes a total metric should be issued. Total is an aggregated of the 'perdevice' values.
  ## Possible values are 'cpu', 'blkio' and 'network'
  ## Total 'cpu' is reported directly by Docker daemon, and 'network' and 'blkio' totals are aggregated by this plugin.
  ## Please note that this setting has no effect if 'total' is set to 'false'
  # total_include = ["cpu", "blkio", "network"]

  ## docker labels to include and exclude as tags.  Globs accepted.
  ## Note that an empty array for both will include all labels as tags
  docker_label_include = []
  docker_label_exclude = []

  ## Which environment variables should we use as a tag
  tag_env = ["JAVA_HOME", "HEAP_SIZE"]

  ## Optional TLS Config
  # tls_ca = "/etc/telegraf/ca.pem"
  # tls_cert = "/etc/telegraf/cert.pem"
  # tls_key = "/etc/telegraf/key.pem"
  ## Use TLS but skip chain & host verification
  # insecure_skip_verify = false
